name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  unit:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install backend deps (+ coverage tools)
        run: |
          python -m pip install --upgrade pip
          pip install fastapi "pydantic>=2" httpx pytest pytest-asyncio uvicorn pytest-cov diff-cover
      - name: Run backend tests with coverage (global >=85% gate)
        run: |
          pytest -q test --cov=fastapi --cov-branch --cov-report=xml:coverage.xml --cov-report=html:htmlcov --cov-fail-under=85
      - name: Enforce changed-file coverage >= 90% (PR only)
        if: github.event_name == 'pull_request'
        run: |
          diff-cover coverage.xml --compare-branch origin/${{ github.base_ref }} --fail-under=90
      - name: Upload coverage artifacts (HTML + XML)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts
          path: |
            coverage.xml
            htmlcov

  frontend-unit:
    runs-on: ubuntu-22.04
    needs: unit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install deps
        working-directory: ./frontend
        run: |
          npm ci || npm i
          npm i -D vitest @testing-library/react @testing-library/jest-dom jsdom || true
      - name: Run Vitest (tests under /test)
        run: npx vitest run "test/frontend/unit/**/*.{test,spec}.{ts,tsx}" --environment jsdom

  e2e:
    runs-on: ubuntu-22.04
    needs: frontend-unit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install deps + browsers
        working-directory: ./frontend
        run: |
          npm ci || npm i
          npm i -D playwright @axe-core/playwright wait-on || true
          npx playwright install --with-deps
      - name: Start dev server
        working-directory: ./frontend
        run: |
          nohup npm run dev >/tmp/next.log 2>&1 &
          npx wait-on http://localhost:3000
      - name: Run Playwright + axe (config under /test)
        run: npx playwright test -c test/playwright.config.ts
      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: test/playwright-report

  lighthouse:
    runs-on: ubuntu-22.04
    needs: frontend-unit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install frontend deps + Lighthouse CI
        working-directory: ./frontend
        run: |
          npm ci || npm i
          npm i -g @lhci/cli@0.12.x
          npm i -D wait-on || true
      - name: Start dev server
        working-directory: ./frontend
        run: |
          nohup npm run dev >/tmp/next.log 2>&1 &
          npx wait-on http://localhost:3000
      - name: Run Lighthouse CI (a11y >= 90 gate)
        run: |
          npx lhci autorun --config=./test/lighthouserc.json
      - name: Upload Lighthouse reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: .lighthouseci

  lint-security:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Lint & Security (blocking)
        run: |
          python -m pip install --upgrade pip
          pip install ruff bandit
          ruff .
          bandit -r fastapi -ll
          cd frontend
          npm ci || npm i
          npm audit --omit=dev --audit-level=high

 
  perf-smoke:
    runs-on: ubuntu-22.04
    needs: unit
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install locust
        run: pip install locust
      - name: Start backend (uvicorn)
        run: |
          nohup python -m uvicorn fastapi.main:app --port 8000 >/tmp/api.log 2>&1 &
          sleep 5
      - name: Perf smoke (<20 req)
        run: |
          locust -f locustfile.py --headless -u 50 -r 10 -t 30s --host http://localhost:8000 --csv=smoke
      - name: Upload locust CSV
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: locust-smoke
          path: smoke*


  gate:
    runs-on: ubuntu-22.04
    needs: [unit, frontend-unit, e2e, lighthouse, lint-security, perf-smoke]
    steps:
      - name: Gate Check
        run: echo "All required jobs passed (coverage + lighthouse + lint/security + perf-smoke)."

